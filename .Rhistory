function (cmat, factors, p = ncol(cmat), start = NULL, iter.max = 10,
unique.tol = 1e-04)
{
dof <- 0.5 * ((p - factors)^2 - p - factors)
if (dof < 0)
warning("negative degrees of freedom")
if (any(abs(diag(cmat) - 1) > .Machine$single.eps))
stop("must have correlation matrix")
if (length(start)) {
if (length(start) != p)
stop("start is the wrong length")
if (any(start < 0 | start >= 1))
stop("all values in start must be between 0 and 1")
oldcomm <- 1 - start
}
else {
diag(cmat) <- NA
oldcomm <- apply(abs(cmat), 1, max, na.rm = TRUE)
}
H <- diag(p)-matrix(1,p,p)/p
psi <- 1-oldcomm
psistar <- H%*%diag(psi)%*%H
cmatstar <- cmat-psistar
if (iter.max < 0)
stop("bad value for iter.max")
ones <- rep(1, factors)
if (iter.max == 0) {
z <- eigen(cmatstar, symmetric = TRUE)
kvals <- z$values[1:factors]
if (any(kvals <= 0))
stop("impermissible estimate reached")
Lambda <- z$vectors[, 1:factors, drop = FALSE] * rep(kvals^0.5,
rep.int(p, factors))
psinew <- diag(cmat) - Lambda^2 %*% ones
}
if (iter.max > 0) {
for (i in 1:iter.max) {
z <- eigen(cmatstar, symmetric = TRUE)
kvals <- z$values[1:factors]
if (any(kvals <= 0))
stop("impermissible estimate reached")
Lambda <- z$vectors[, 1:factors, drop = FALSE] *
rep(kvals^0.5, rep.int(p, factors))
psinew <<- drop(diag(cmat) - Lambda^2 %*% ones)
psinewstar <- H%*%diag(psinew)%*%H
if (all(abs(psinew - psi) < unique.tol)) {
iter.max <- i
break
}
psistar <- psinewstar
cmatstar <- cmat-psistar
}
}
dn <<- dimnames(cmat)[[1]]
dimnames(Lambda) <- list(dn, paste("Factor", 1:factors, sep = ""))
diag(cmat) <- 1
uniq <- diag(psistar)
names(uniq) <- dn
ans <- list(loadings = Lambda, uniquenesses = uniq, correlation = cmat,
criteria = c(iterations = iter.max), factors = factors,
dof = dof, method = "principal",psi = psistar)
class(ans) <- "factanal"
ans
}
fit <- factanal.fit.principal1(cv, 3, p = p, start = st[,1], iter.max = maxiter)
fit <- factanal.fit.principal1(cv, 3, p = p, start = (1 - 0.5 * 3/p)/diag(solve(cv))[,1], iter.max = maxiter)
start <- (1 - 0.5 * 3/p)/diag(solve(cv))
start
fit <- factanal.fit.principal1(cv, 3, p = p, start = start, iter.max = maxiter)
fit <- factanal.fit.principal1(cv, 3, p = p, start = start)
fit
599.1667*fit$criteria["obj"]
599.1667*fit$criteria["objective"]
fit$criteria
source('C:/Users/Jutta/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/517/402/pfa_PF [109884].R', echo=TRUE)
res.cla <- pfa.pf(x,factors=3,robust=FALSE,scores="Bartlett",rotation="varimax",start=st)
res.cla
cl <- factanal(x, factors=3, start=st)
cl
pfa.pf(x,factors=2,robust=FALSE,scores="Bartlett",rotation="varimax",start=st)
cl <- factanal(x, factors=2, start=st)
cl
plot(cl)
biplot(cl)
biplot(cl$loadings)
biplot(cl$loadings, cl$factors)
cl$loadings
cl$loadings[1,]
cl$loadings[1:10,]
cl$loadings[1:11,]
cl$loadings[1:10,]
plot(cl$loadings[1:10,])
biplot(cl$loadings[1:10,])
biplot(cl$loadings[1:10,], cl$factors)
cl$factors
cl$uniquenesses
biplot(cl$loadings[1:10,], cl$uniquenesses)
cl <- factanal(x, factors=2, start=st, scores="Bartlett")
cl
biplot(cl)
plot(cl$scores, cl$loadings)
plot(cl$scores, cl$loadings[1:10,])
cl$scores
res.cla$scores
dim(res.cla$scores)
dim(res.cla$loadings)
res.cla <- pfa.pf(x,factors=2,robust=FALSE,scores="Bartlett",rotation="varimax",start=st)
dim(res.cla$loadings)
dim(res.cla$scores)
source('C:/Users/Jutta/SkyDrive/WS 2015_16/PR Projektpraktikum/robComp-git/R/pcaCoDa.R', echo=TRUE)
pcc <- pcaCoDa(x)
pcc
summary(pcc)
plot(pcc)
pcc$princompOutputClr
dim(pcc$princompOutputClr$loadings)
dim(pcc$princompOutputClr$scores)
dim(res.cla$loadings)
dim(res.cla$scores)
biplot(res.cla$scores, res.cla$loadings)
res.cla$method
res.cla$call
biplot.pfa <- function(x, y, ...){
## biplot
#z <- list()
#z$scores <- x$scores
#z$loadings <- x$loadings
beschx <- if(x$method == "robust") "PC1 (clr-robust)" else "PC1 (clr-classical)"
beschy <- if(x$method == "robust") "PC2 (clr-robust)" else "PC2 (clr-classical)"
#	biplot(x$princompOutputClr, xlab=beschx, ylab=beschy)
biplot.default(x$scores, x$loadings, xlab=beschx, ylab=beschy, ...)
}
biplot(res.cla)
biplot(pcc)
biplot.pcaCoDa(pcc)
plot.pcaCoDa(pcc)
plot(pcc)
plot(res.cla)
class(res.cla)
class(cl)
biplot.pcaCoDa <- function(x, ...){
## biplot
#z <- list()
#z$scores <- x$scores
#z$loadings <- x$loadings
beschx <- if(x$method == "robust") "PC1 (clr-robust)" else "PC1 (clr-classical)"
beschy <- if(x$method == "robust") "PC2 (clr-robust)" else "PC2 (clr-classical)"
#	biplot(x$princompOutputClr, xlab=beschx, ylab=beschy)
biplot(x$princompOutputClr, xlab=beschx, ylab=beschy, ...)
}
source('C:/Users/Jutta/SkyDrive/WS 2015_16/PR Projektpraktikum/robComp-git/R/biplotpcaCoDa.R', echo=TRUE)
biplot.pfa <- function(x, ...){
## biplot
#z <- list()
#z$scores <- x$scores
#z$loadings <- x$loadings
beschx <- if(x$method == "robust") "PC1 (clr-robust)" else "PC1 (clr-classical)"
beschy <- if(x$method == "robust") "PC2 (clr-robust)" else "PC2 (clr-classical)"
#	biplot(x$princompOutputClr, xlab=beschx, ylab=beschy)
biplot.default(x$scores, x$loadings, xlab=beschx, ylab=beschy, ...)
}
biplot.pfa(res.cla)
biplot(res.cla$scores, res.cla$loadings)
biplot.pfa <- function(x, ...){
## biplot
#z <- list()
#z$scores <- x$scores
#z$loadings <- x$loadings
beschx <- if(x$method == "robust") "PC1 (clr-robust)" else "PC1 (clr-classical)"
beschy <- if(x$method == "robust") "PC2 (clr-robust)" else "PC2 (clr-classical)"
#	biplot(x$princompOutputClr, xlab=beschx, ylab=beschy)
biplot(x$scores, x$loadings, xlab=beschx, ylab=beschy, ...)
}
biplot.pfa(res.cla)
biplot.pfa(res.rob)
biplot.pfa(res.cla)
biplot.pfa <- function(x, ...){
## biplot
#z <- list()
#z$scores <- x$scores
#z$loadings <- x$loadings
beschx <- if(x$method == "robust") "Factor1 (clr-robust)" else "Factor1 (clr-classical)"
beschy <- if(x$method == "robust") "Factor2 (clr-robust)" else "Factor2 (clr-classical)"
#	biplot(x$princompOutputClr, xlab=beschx, ylab=beschy)
biplot(x$scores, x$loadings, xlab=beschx, ylab=beschy, ...)
}
biplot.pfa(res.cla)
biplot(res.cla)
biplot.pfa(res.cla)
biplot.factanal <- function(x, ...){
## biplot
#z <- list()
#z$scores <- x$scores
#z$loadings <- x$loadings
beschx <- if(x$method == "robust") "Factor1 (clr-robust)" else "Factor1 (clr-classical)"
beschy <- if(x$method == "robust") "Factor2 (clr-robust)" else "Factor2 (clr-classical)"
#	biplot(x$princompOutputClr, xlab=beschx, ylab=beschy)
biplot(x$scores, x$loadings, xlab=beschx, ylab=beschy, ...)
}
biplot(res.cla)
res.cla2 <- pfa.pf(x,factors=2,robust=FALSE,scores="regression",rotation="varimax",start=st)
res.cla2
data("expenditures")
res.cla2 <- pfa.pf(expenditures,factors=2,robust=FALSE,scores="regression",rotation="varimax",start=st)
res.cla2 <- pfa.pf(expenditures,factors=2,robust=FALSE,scores="regression",rotation="varimax")
head(ilr2(x))
head(isomLR(x))
res.rob$method
biplot.factanal <- function(x, ...){
#beschx <- if(x$method == "robust") "Factor1 (clr-robust)" else "Factor1 (clr-classical)"
#beschy <- if(x$method == "robust") "Factor2 (clr-robust)" else "Factor2 (clr-classical)"
biplot(x$scores, x$loadings, xlab=beschx, ylab=beschy, ...)
}
plot(res.cla)
biplot(res.cla)
biplot.factanal <- function(x, ...){
#beschx <- if(x$method == "robust") "Factor1 (clr-robust)" else "Factor1 (clr-classical)"
#beschy <- if(x$method == "robust") "Factor2 (clr-robust)" else "Factor2 (clr-classical)"
biplot(x$scores, x$loadings, ...)
}
biplot(res.cla)
ohnr <- pfa.pf(x,factors=2,robust=FALSE,scores="Bartlett",rotation="none")
mitr <- pfa.pf(x,factors=2,robust=FALSE,scores="Bartlett",rotation="varimax")
mitr <- pfa.pf(x,factors=2,robust=FALSE,scores="Bartlett",rotation="varimax")
ohnr <- pfa.pf(x,factors=2,robust=FALSE,scores="Bartlett",rotation="none",start=st)
mitr <- pfa.pf(x,factors=2,robust=FALSE,scores="Bartlett",rotation="varimax",start=st)
head(ohnr$loadings)
head(mitr$loadings)
head(varimax(ohnr$loadings))
head(varimax(ohnr$loadings)$loadings)
head(ohnr$loadings)
head(mitr$loadings)
source('C:/Users/Jutta/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/517/402/pfa_PF [109884].R', echo=TRUE)
source('C:/Users/Jutta/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/517/402/pfa_PF [109884].R', echo=TRUE)
mitr <- pfa.pf(x,factors=2,"robust",scores="Bartlett",rotation="varimax",start=st)
mitr
res.rob
res.rob <- pfa.pf(x,factors=3,robust=TRUE,scores="Bartlett",rotation="varimax",start=st)
mitr <- pfa.pf(x,factors=2,"robust",scores="none",rotation="varimax",start=st)
mitr
mitr <- pfa.pf(x,factors=3,"robust",scores="none",rotation="varimax",start=st)
mitr
mitr <- pfa.pf(x,factors=3,method="robust",scores="none",rotation="varimax",start=st)
mitr
source('C:/Users/Jutta/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/517/402/pfa_PF [109884].R', echo=TRUE)
source('C:/Users/Jutta/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/517/402/pfa_PF [109884].R', echo=TRUE)
pfa.pf(x,factors=2,robust=TRUE,scores="Bartlett",rotation="none",start=st)
pfa.pf(x,factors=2,method="robust",scores="Bartlett",rotation="none",start=st)
pfa.pf(x,factors=2,robust=FALSE,scores="Bartlett",rotation="none",start=st)
pfa.pf(x,factors=2,method="classical",scores="Bartlett",rotation="none",start=st)
source('C:/Users/Jutta/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/517/402/pfa_PF [109884].R', echo=TRUE)
pfa.pf(x,factors=2,robust=FALSE,scores="Bartlett",rotation="none",start=st)
source('C:/Users/Jutta/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/517/402/pfa_PF [109884].R', echo=TRUE)
pfa.pf(x,factors=2,robust=FALSE,scores="Bartlett",rotation="none",start=st)
source('C:/Users/Jutta/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/517/402/pfa_PF [109884].R', echo=TRUE)
source('C:/Users/Jutta/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/517/402/pfa_PF [109884].R', echo=TRUE)
biplot.factanal <- function(x, ...){
beschx <- if(x$robust) "Factor1 (clr-robust)" else "Factor1 (clr-classical)"
beschy <- if(x$robust) "Factor2 (clr-robust)" else "Factor2 (clr-classical)"
biplot(x$scores, x$loadings, xlab=beschx, ylab=beschy, ...)
}
res.rob <- pfa.pf(x,factors=3,robust=TRUE,scores="Bartlett",rotation="varimax",start=st)
res.rob
biplot(res.rob)
res.cla <- pfa.pf(x,factors=3,robust=FALSE,scores="Bartlett",rotation="varimax",start=st)
res.cla
biplot(res.cla)
packrat::init()
res.cla
library(robCompositions)
?biplot.pcaCoDa
??biplot.pcaCoDa
library(robComp)
?biplot.pcaCoDa
??biplot.pcaCoDa
library(robCompositions)
?biplot.pcaCoDa
library(robCompositions)
?biplot.pcaCoDa
?plot.pcaCoDa
library(robCompositions)
?plot.pcaCoDa
?screeplot.default
?screeplot
?screeplot
source('~/.active-rstudio-document', echo=TRUE)
data("expenditures")
x <- expenditures
pf1 <- pfa.pf(x)
pf1 <- pfa.pf(x, factors=1)
pf1 <- pfa.pf(x, factors=3)
pf1 <- pfa.pf(x, factors=2)
pf1 <- pfa.pf(x, factors=2, covmat="cov")
pfa(x, factors=1, covmat="cov")
pf1 <- pfa.pf(x, factors=1, covmat="cov")
library(mvoutlier)
data(chorizon)
x <- chorizon[,101:110]
set.seed(200)
st <- matrix(runif(ncol(x)*200),nrow=ncol(x))
pf.cl <- pfa.pf(x, factors=3, robust=FALSE, scores="Bartlett", rotation="varimax", start=st)
?ginv
library(MASS)
pf.cl <- pfa.pf(x, factors=3, robust=FALSE, scores="Bartlett", rotation="varimax", start=st)
pf.cl
mt.cl <- pfa(x, factors = 3, robust=F, scores="Bartlett", start=st)
mt.cl
class(mt.cl)
class(pf.cl)
plot(pf.cl)
biplot(pf.cl)
biplot(mt.cl)
pf.cl$robust
mt.cl$method
library(robCompositions)
pf.cl
mt.cl <- pfa(x, factors = 3, robust=F, scores="Bartlett", start=st)
mt.cl
library(robCompositions)
pf.cl
mt.cl <- pfa(x, factors = 3, robust=F, scores="Bartlett", start=st)
mt.cl
pfa(x, factors = 3, robust=F, scores="regression", start=st)
pfa(x, factors = 3, robust=F, scores="none", start=st)
res.rob <- pfa(x,factors=3,robust=TRUE,scores="Bartlett",rotation="varimax",start=st)
res.rob
plot(mt.cl)
biplot(mt.cl)
biplot(res.rob)
res.rob2 <- pfa.pf(x,factors=3,robust=TRUE,scores="Bartlett",rotation="varimax",start=st)
biplot(res.rob2)
mt.cl$correlation
?pfa
plot(mt.cl$uniquenesses)
plot(mt.cl$loadings)
plot(mt.cl$scores)
plot(mt$loadings)
plot(mt.cl$loadings)
plot(mt.cl$loadings, type="p")
mt.cl$loadings
mt.cl$loadings[,1]
mt.cl$loadings[,2]
mt.cl$loadings[,3]
mt.cl$loadings[,4]
plot(mt.cl$loadings[,1], type="p")
ilr <- function(x){
x.ilr=matrix(NA,nrow=nrow(x),ncol=ncol(x)-1)
for (i in 1:ncol(x.ilr)){
x.ilr[,i]=sqrt((i)/(i+1))*
log(((apply(as.matrix(x[,1:i]), 1, prod))^(1/i))/(x[,i+1]))
}
return(x.ilr)
}
ilr(x)
head(ilr(x))
head(isomLR(x))
head(isomLRinv(x))
head(-ilr(x))
head(ilr(x))
head(isomLR(x))
1/(1-1)
xx <- c(0.93, 0.04, 0.001)
isomLR(xx)
nrow(xx)
xx <- matrix(c(0.93, 0.04, 0.002))
xx
isomLR(xx)
ilr(xx)
ncol(x)
ncol(xx)-1
apply(as.matrix(x[,2:2,drop=FALSE]),1,prod)
apply(as.matrix(xx[,2:2,drop=FALSE]),1,prod)
xx <- matrix(c(0.93, 0.04, 0.002, 0.74), nrow=2, byrow=TRUE)
xx
apply(as.matrix(xx[,2:2,drop=FALSE]),1,prod)
apply(as.matrix(xx[,1:2,drop=FALSE]),1,prod)
0.93*0.04
library(robCompositions)
?pcaCoDa
library(devtools)
install_github("matthias-da/robCompositions")
library(robCompositions)
?pcaC
?pcaCoDa
install_github("matthias-da/robCompositions")
library(devtools)
install_github("matthias-da/robCompositions")
?pfa
library(robCompositions)
?pfa
?summary.pcaCoDa
session_info()
sessioninfo()
sessionInfo()
library(robCompositions)
?pfa
library(robCompJutta)
?pfa
?robCompJutta::pfa
library(robCompositions)
?pfa
data(expenditures)
x <- expenditures
res0 <- pfa(x, factors=1)
## the following produce always the same result:
res1 <- pfa(x, factors=1, covmat="covMcd")
res2 <- pfa(x, factors=1, covmat=covMcd(isomLR(x))$cov)
res3 <- pfa(x, factors=1, covmat=covMcd(isomLR(x)))
data("arcticLake")
data(coffee)
head(coffee)
str(coffee)
x <- coffee[,-1]
res0 <- pfa(x, factors=2)
res0 <- pfa(x, factors=1)
res0 <- pfa(x, factors=2, covmat = "cov")
res0 <- pfa(x, factors=2, covmat = "covMCD")
st <- matrix(runif(ncol(x)*200),nrow=ncol(x))
res0 <- pfa(x, factors=2, covmat = "covMCD", start=st)
res0
plot(res0)
biplot(res0)
res0$robust
res0$loadings
res0$scores
res0 <- pfa(x, factors=3, covmat = "covMCD", start=st)
plot(res0)
res0
biplot(res0)
biplot(res0)
library(robCompositions)
library(robCompositions)
?pfa
?biplot.factanal
x <- coffee[,-1]
res0
st <- matrix(runif(ncol(x)*200),nrow=ncol(x))
res0 <- pfa(x, factors=3, covmat = "covMCD", start=st)
res0
biplot(res0)
library(robCompositions)
library(devtools)
install_github("matthias-da/robCompositions")
library(robCompositions)
library(devtools)
install_github("matthias-da/robCompositions")
library(robCompositions)
library("robCompositions", lib.loc="~/R/win-library/3.2")
install.packages("digest")
library(digest)
library("robustbase", lib.loc="~/R/win-library/3.2")
require(robCompositions)
require(MASS)
require(digest)
install.packages("digest", repos=c("http://rstudio.org/_packages", "http://cran.rstudio.com"))
require(digest)
library(devtools)
library(robCompositions)
?pfa
library(devtools)
load_all("path/to/package/")
?save
library(robCompositions)
?pfa
?biplot.pcaCoDa
data("expenditures")
x <- expenditures
?pcaCoDa
library(robCompositions)
?pcaCoDa
p1 <- pcaCoDa(expenditures)
p1
plot(p1)
summary(p1)
biplot(p1)
x <- princomp(expenditures)
x
summary(x)
library(mvoutlier)
install.packages("mvoutlier")
library(mvoutlier)
data(chorizon)
x <- chorizon[,101:110]
set.seed(200)
st <- matrix(runif(ncol(x)*200),nrow=ncol(x))
res.cla <- pfa(x,factors=3,robust=FALSE,scores="Bartlett",rotation="varimax",start=st)
res.rob <- pfa(x,factors=3,robust=TRUE,scores="Bartlett",
rotation="varimax",start=st)
res.cla <- pfa(x,factors=3,robust=FALSE,scores="Bartlett",rotation="varimax")
library(robCompositions)
res.rob <- pfa(x,factors=3,robust=TRUE,scores="Bartlett",
rotation="varimax",start=st)
res.cla <- pfa(x,factors=3,robust=FALSE,scores="Bartlett",rotation="varimax")
res <- pfa(x,factors=3,robust=FALSE,scores="Bartlett",rotation="varimax")
source("pfa_PF.R")
source('C:/Users/Jutta/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/560/499/pfa_PF [30681].R', echo=TRUE)
res.cla <- pfa(x,factors=3,robust=FALSE,scores="Bartlett",rotation="varimax",start=st)
res.rob <- pfa(x,factors=3,robust=TRUE,scores="Bartlett",rotation="varimax",start=st)
res <- pfa(x,factors=3,robust=FALSE,scores="Bartlett",rotation="varimax")
source('C:/Users/Jutta/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/560/499/pfa_PF [30681].R', echo=TRUE)
res.cla <- pfa(x,factors=3,robust=FALSE,scores="Bartlett",rotation="varimax",start=st)
library(MASS)
res.cla <- pfa(x,factors=3,robust=FALSE,scores="Bartlett",rotation="varimax",start=st)
res.rob <- pfa(x,factors=3,robust=TRUE,scores="Bartlett",rotation="varimax",start=st)
res <- pfa(x,factors=3,robust=FALSE,scores="Bartlett",rotation="varimax")
source('C:/Users/Jutta/Projekt/pfa_PF.R', echo=TRUE)
res <- pfa(x,factors=3,robust=FALSE,scores="Bartlett",rotation="varimax")
?solve
solve
?solve
?pfa
res <- pfa(x,factors=3,robust=FALSE,scores="Bartlett",rotation="varimax",covmat="covMcd")
